"use strict";

// –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∏–∑ 50 —Å–º–∞–π–ª–æ–≤, —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.
const allSmileys = [
    "üòÜ", "üòÖ", "üòÉ", "üòà", "üòâ", "üòÇ", "üòé", "ü§£", "üòä", "üòá",
    "üòç", "üòã", "üòú", "ü§©", "ü•∞", "üòö", "üòò", "ü§ó", "ü§´", "ü§î",
    "üßê", "ü§®", "üòê", "üòë", "üò∂", "üôÑ", "üòè", "üò£", "üò•", "üòÆ",
    "ü§ê", "üòØ", "üò™", "üò´", "üò¥", "üòå", "üòõ", "üòù", "üôÉ", "ü§ë",
    "üòí", "üòì", "üòî", "üòï", "üôÅ", "üòñ", "üòû", "üòü", "üò§", "üò¢"
];

// –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–º–∞–π–ª–æ–≤.
let displayedSmileys = [];

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–º–∞–π–ª–æ–≤ –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤.
let smileys = [];

// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Å–º–∞–π–ª–æ–≤ –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π
let smileContainer = document.querySelector('#smile-container');
let voteContainer = document.querySelector('#vote-container');
let addSmileyButton = document.querySelector('#add-smiley-button');
let modal = document.querySelector('#modal');
let addModalButton = document.querySelector('#add-modal-button');
let closeModalButton = document.querySelector('#close-modal-button');
let modalContent = document.querySelector('.modal-content');

// –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π
function updateVotes() {
    voteContainer.innerHTML = "";

    smileys.forEach((item) => {
        let voteElement = document.createElement('div');
        voteElement.classList.add('vote-score');
        voteElement.textContent = item.voteCount;

        voteContainer.appendChild(voteElement);
    });
}

// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–º–∞–π–ª—ã
function showSmiles() {
    smileContainer.innerHTML = "";

    displayedSmileys.forEach((item, index) => {
        let smileElement = document.createElement('div');
        smileElement.classList.add('smiley');

        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∫—Ä–µ—Å—Ç–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        let removeButton = document.createElement('button');
        removeButton.classList.add('remove-button');
        removeButton.textContent = '‚ùå';

        removeButton.addEventListener('click', () => {
            const selectedIndex = parseInt(smileElement.dataset.index, 10); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ —Å –ø–æ–º–æ—â—å—é parseInt
            if (!isNaN(selectedIndex)) {
                displayedSmileys.splice(selectedIndex, 1);
                smileys.splice(selectedIndex, 1);
                showSmiles();
                updateVotes();
            }
        });


        smileElement.textContent = `${item.smile}`;
        smileElement.dataset.index = index.toString();

        smileElement.addEventListener('click', () => {
            const selectedIndex = smileElement.dataset.index;
            smileys[selectedIndex].voteCount++;
            updateVotes();
        });

        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∫—Ä–µ—Å—Ç–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–µ—Ä–µ–¥ —Å–º–∞–π–ª–æ–º
        smileElement.insertBefore(removeButton, smileElement.firstChild);

        smileContainer.appendChild(smileElement);
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–º–∞–π–ª–∞
addSmileyButton.addEventListener('click', () => {
    if (displayedSmileys.length < 50) {
        modal.style.display = 'block';
    } else {
        alert('–í–∏ –¥–æ—Å—è–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Å–º–∞–π–ª—ñ–≤ (50)');
    }
});

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ —Å–º–∞–π–ª–∞–º–∏
function populateModal() {
    modalContent.innerHTML = "";

    const smileyRows = [];
    for (let i = 0; i < allSmileys.length; i += 10) {
        smileyRows.push(allSmileys.slice(i, i + 10));
    }

    smileyRows.forEach((row) => {
        const rowContainer = document.createElement('div');
        rowContainer.classList.add('modal-row');

        row.forEach((smiley) => {
            const smileyItem = document.createElement('div');
            smileyItem.classList.add('modal-smiley');
            smileyItem.textContent = smiley;

            smileyItem.addEventListener('click', () => {
                if (displayedSmileys.length < 50) {
                    const newSmiley = {
                        smile: smiley,
                        voteCount: 0,
                    };
                    smileys.push(newSmiley);
                    displayedSmileys.push(newSmiley);
                    showSmiles();
                    updateVotes();
                    modal.style.display = 'none';
                } else {
                    alert('–í–∏ –¥–æ—Å—è–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Å–º–∞–π–ª—ñ–≤ (50)');
                }
            });

            rowContainer.appendChild(smileyItem);
        });

        modalContent.appendChild(rowContainer);
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ —Å–º–∞–π–ª–∞–º–∏
addModalButton.addEventListener('click', () => {
    populateModal();
    modal.style.display = 'block';
});

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ —Å–º–∞–π–ª–∞–º–∏
closeModalButton.addEventListener('click', () => {
    modal.style.display = 'none';
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–º–∞–π–ª–∞–º–∏
function refreshSmileys() {
    // –û—á–∏—Å—Ç–∏—Ç—å –º–∞—Å—Å–∏–≤—ã —Å–º–∞–π–ª–æ–≤ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Å–º–∞–π–ª–æ–≤
    smileys = [];
    displayedSmileys = [];

    // –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å–º–∞–π–ª–æ–≤ –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π
    smileContainer.innerHTML = "";
    voteContainer.innerHTML = "";

    // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å 5 —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–º–∞–π–ª–∞–º–∏
    initializeRandomSmileys();
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å"
document.querySelector('#refresh-button').addEventListener('click', refreshSmileys);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å 5 —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–º–∞–π–ª–∞–º–∏
function initializeRandomSmileys() {
    while (displayedSmileys.length < 5 && allSmileys.length > 0) {
        const randomIndex = Math.floor(Math.random() * allSmileys.length);
        const randomSmiley = allSmileys.splice(randomIndex, 1)[0];

        const newSmiley = {
            smile: randomSmiley,
            voteCount: 0,
        };

        smileys.push(newSmiley);
        displayedSmileys.push(newSmiley);
    }

    showSmiles();
    updateVotes();
}

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
initializeRandomSmileys();




